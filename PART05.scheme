
(define subst*
    (lambda (new old l)
        (cond
            ((null ? l) (quote()))
            (else
                (cond
                    ((atom? (car l)) 
                        (cond
                            ((eq? old (car l)) (cons new (subst* new old (cdr l) )))
                            (else (cons old (subst* new old (cdr l))))
                        )
                    )
                    (else (cons (subst* new old (car l)) (subst* new old (cdr l))))
                )
            )
        )

    )
)

(define insertL*
    (lambda (new old l)
        (cond 
            ( (null? l) (quote()))
            (else
                (cond
                    ((atom? (car l))
                        (cond
                            ((eq? old (car l)) (cons new (cons old (insertL* new old (cdr l)))))
                            (else (cons (car l) (insertL* new old (cdr l))))
                        )
                    )
                    (else (cons (insertL* new old (car l)) (insertL* new old (cdr l))))
                )
            )
        )
    )
)